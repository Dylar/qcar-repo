plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.6.20"
    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
    id 'org.springframework.boot' version '2.6.1'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
}
apply plugin: "kotlin"

group = "de.bitb"
version = "0.0.1"

mainClassName = 'de.bitb.testingApi.TestingApiApplicationKt'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:2.5.5"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.+"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.springframework.boot:spring-boot-starter-test:2.5.5"
    testImplementation "io.mockk:mockk:1.12.0"
}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'dylar'
String imageName = "${dockerHubUsernameProperty}/$project.name:$version"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '8080:8080'
    clean true
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}